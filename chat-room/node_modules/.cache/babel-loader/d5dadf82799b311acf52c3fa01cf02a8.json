{"ast":null,"code":"var _jsxFileName = \"/home/chiks/socketProject/chat-room/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ListGroup } from 'react-bootstrap';\nimport './App.css';\nimport { io } from 'socket.io-client';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { RoomHeader } from './features/rooms/RoomHeader';\nimport { RoomsList } from './features/rooms/RoomsList';\nimport { RoomFooter } from './features/rooms/RoomFooter';\nimport { ChatHeader } from './features/chats/ChatHeader';\nimport { ChatMessages } from './features/chats/ChatMessages';\nimport { ChatInput } from './features/chats/ChatInput';\nimport { newChatMessage, newRoomCreated, userJoinedRoom } from './features/rooms/roomsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst endpoint = 'http://localhost:3001';\nconst colorChoices = ['text-primary', 'text-success', 'text-secondary', 'text-danger', 'text-warning', 'text-info', 'text-dark'];\n\nlet getRandomInt = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nlet randomInt = getRandomInt(0, colorChoices.length + 1);\n\nconst App = () => {\n  _s();\n\n  const [clicked, setClicked] = useState(false);\n  const [roomId, setRoomId] = useState('');\n  const [username, setUsername] = useState('');\n  const [usernameColor, setUsernameColor] = useState(''); //const []\n\n  const rooms = useSelector(state => state.rooms.rooms);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket = io(endpoint);\n    socket.on('chat message', function (data) {\n      dispatch(newChatMessage({\n        roomId: data.roomId,\n        text: data.text,\n        messageId: nanoid(),\n        username: data.username,\n        usernameColor: data.usernameColor\n      }));\n    });\n    socket.on('new room created', function (data) {\n      dispatch(newRoomCreated({\n        roomId: data.roomId,\n        roomName: data.roomName\n      }));\n    });\n    socket.on('user joined a room', function (data) {\n      dispatch(userJoinedRoom({\n        roomId: data.roomId,\n        username: data.username,\n        messageId: nanoid()\n      }));\n    });\n  }, [dispatch]);\n\n  const handleClick = (e, roomId) => {\n    setClicked(true);\n    setRoomId(roomId);\n    socket.emit('user joined a room', {\n      username,\n      roomId\n    });\n  };\n\n  const handleUsername = username => {\n    setUsername(username);\n    const username_color = colorChoices[randomInt];\n    setUsernameColor(username_color);\n  };\n\n  const emitMessage = (text, roomId, username, usernameColor) => {\n    if (text) {\n      socket.emit('chat message', {\n        text,\n        roomId,\n        username,\n        usernameColor\n      });\n    }\n  };\n\n  const handleBackToRoomDisplay = () => {\n    setClicked(false);\n  };\n\n  const createNewRoom = (roomName, roomId, username) => {\n    alert(roomName + ' ' + roomId);\n    socket.emit('new room created', {\n      roomName,\n      roomId,\n      username\n    });\n  };\n\n  const renderedRooms = rooms.map(room => {\n    const last_message = room.messages[room.messages.length - 1];\n    return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      action: true,\n      onClick: e => handleClick(e, room.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 fw-bold room-name\",\n        children: room.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), last_message.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex text-italics last-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1\",\n          children: last_message.username.name + ': ' + last_message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \"10:50am\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex fw-bold last-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1\",\n          children: last_message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \"10:50am\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, room.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3 app-container\",\n    children: username ? clicked ? /*#__PURE__*/_jsxDEV(ChatDisplay, {\n      roomId: roomId,\n      emitMessage: emitMessage,\n      handleClick: handleClick,\n      username: username,\n      usernameColor: usernameColor,\n      handleBackToRoomDisplay: handleBackToRoomDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RoomDisplay, {\n      renderedRooms: renderedRooms,\n      username: username,\n      createNewRoom: createNewRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserEntry, {\n      handleUsername: handleUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0if2Rwf3FxRHhiFJg6bT/vfbFhY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\n\nfunction UserEntry({\n  handleUsername\n}) {\n  _s2();\n\n  const [username, setUsername] = useState('');\n\n  const handleChange = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (username) {\n      handleUsername(username);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-absolute top-50 start-50 translate-middle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-white bg-dark mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Enter a username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserEntry, \"AfRD6VxGv+Gn/ZNWvgmLk5f6638=\");\n\n_c2 = UserEntry;\n\nfunction ChatDisplay({\n  roomId,\n  emitMessage,\n  handleClick,\n  username,\n  handleBackToRoomDisplay,\n  usernameColor\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card chat-display\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        roomId: roomId,\n        handleClick: handleClick,\n        handleBackToRoomDisplay: handleBackToRoomDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        roomId: roomId,\n        username: username,\n        usernameColor: usernameColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        roomId: roomId,\n        emitMessage: emitMessage,\n        username: username,\n        usernameColor: usernameColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ChatDisplay;\n;\n\nfunction RoomDisplay({\n  renderedRooms,\n  username,\n  createNewRoom\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(RoomHeader, {\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomsList, {\n        renderedRooms: renderedRooms,\n        createNewRoom: createNewRoom,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = RoomDisplay;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"UserEntry\");\n$RefreshReg$(_c3, \"ChatDisplay\");\n$RefreshReg$(_c4, \"RoomDisplay\");","map":{"version":3,"sources":["/home/chiks/socketProject/chat-room/src/App.js"],"names":["React","useEffect","useState","useSelector","useDispatch","ListGroup","io","nanoid","RoomHeader","RoomsList","RoomFooter","ChatHeader","ChatMessages","ChatInput","newChatMessage","newRoomCreated","userJoinedRoom","socket","endpoint","colorChoices","getRandomInt","min","max","Math","floor","random","randomInt","length","App","clicked","setClicked","roomId","setRoomId","username","setUsername","usernameColor","setUsernameColor","rooms","state","dispatch","on","data","text","messageId","roomName","handleClick","e","emit","handleUsername","username_color","emitMessage","handleBackToRoomDisplay","createNewRoom","alert","renderedRooms","map","room","last_message","messages","id","name","UserEntry","handleChange","target","value","handleSubmit","ChatDisplay","RoomDisplay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport './App.css';\r\n\r\nimport { io } from 'socket.io-client'\r\n\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n\r\nimport { RoomHeader } from './features/rooms/RoomHeader'\r\nimport { RoomsList } from './features/rooms/RoomsList'\r\nimport { RoomFooter } from './features/rooms/RoomFooter'\r\n\r\nimport { ChatHeader } from './features/chats/ChatHeader'\r\nimport { ChatMessages } from './features/chats/ChatMessages'\r\nimport { ChatInput } from './features/chats/ChatInput'\r\n\r\nimport { newChatMessage, newRoomCreated, userJoinedRoom } from './features/rooms/roomsSlice'\r\n\r\nlet socket;\r\nconst endpoint = 'http://localhost:3001'\r\n\r\nconst colorChoices = [\r\n  'text-primary', 'text-success', 'text-secondary', 'text-danger',\r\n  'text-warning', 'text-info', 'text-dark',\r\n]\r\n\r\nlet getRandomInt = (min, max) => (\r\n  Math.floor(Math.random() * (max - min) + min)\r\n)\r\n\r\nlet randomInt = getRandomInt(0, colorChoices.length + 1)\r\n\r\nconst App = () => {\r\n  \r\n  const [clicked, setClicked] = useState(false);\r\n  const [roomId, setRoomId] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [usernameColor, setUsernameColor] = useState('');\r\n  //const []\r\n\r\n  const rooms = useSelector(state => state.rooms.rooms);\r\n  const dispatch = useDispatch();  \r\n\r\n  useEffect(() => {\r\n    socket = io(endpoint);\r\n    socket.on('chat message', function(data) {\r\n      dispatch(newChatMessage({\r\n        roomId: data.roomId,\r\n        text: data.text,\r\n        messageId: nanoid(),\r\n        username: data.username,\r\n        usernameColor: data.usernameColor\r\n      }));\r\n    });\r\n    \r\n    socket.on('new room created', function(data) {\r\n      dispatch(newRoomCreated({\r\n        roomId: data.roomId,\r\n        roomName: data.roomName\r\n      }));      \r\n    })\r\n\r\n    socket.on('user joined a room', function(data) {\r\n      dispatch(userJoinedRoom({\r\n        roomId: data.roomId,\r\n        username: data.username,\r\n        messageId: nanoid(),\r\n      }));\r\n    })\r\n   \r\n  }, [dispatch]);\r\n\r\n  const handleClick = (e, roomId) => {\r\n    setClicked(true)\r\n    setRoomId(roomId)\r\n    socket.emit('user joined a room', { username, roomId})\r\n  }\r\n\r\n  const handleUsername = (username) => {\r\n    setUsername(username)\r\n    const username_color = colorChoices[randomInt]\r\n    setUsernameColor(username_color)\r\n  }\r\n\r\n  const emitMessage = (text, roomId, username, usernameColor) => {\r\n    if (text) {\r\n      socket.emit('chat message', { text, roomId, username, usernameColor })\r\n    }\r\n  }\r\n\r\n  const handleBackToRoomDisplay = () => {\r\n    setClicked(false)\r\n  }\r\n\r\n  const createNewRoom = (roomName, roomId, username) => {\r\n    alert(roomName + ' ' + roomId)\r\n    socket.emit('new room created', { roomName, roomId, username })\r\n  }\r\n\r\n\r\n  const renderedRooms = rooms.map(room => {\r\n\r\n    const last_message = room.messages[room.messages.length -1]\r\n    \r\n    return (\r\n      <ListGroup.Item action onClick={e => handleClick(e, room.id)} key={room.id}>       \r\n          <div className=\"p-2 fw-bold room-name\">{room.name}</div>\r\n          { last_message.username ?\r\n            <div className=\"d-flex text-italics last-message\">\r\n              <div className=\"flex-grow-1\">{last_message.username.name + ': ' + last_message.text}</div>\r\n              <div className=\"\">10:50am</div>\r\n            </div> :\r\n            <div className=\"d-flex fw-bold last-message\">\r\n              <div className=\"flex-grow-1\">{last_message.text}</div>\r\n              <div className=\"\">10:50am</div>\r\n            </div>\r\n          }\r\n          \r\n      </ListGroup.Item>\r\n    )\r\n  });\r\n  \r\n  return (\r\n    <div className=\"container mt-3 app-container\">\r\n    {username ? \r\n      clicked ?\r\n        <ChatDisplay\r\n          roomId={roomId}\r\n          emitMessage={emitMessage}\r\n          handleClick={handleClick}\r\n          username={username}\r\n          usernameColor={usernameColor}\r\n          handleBackToRoomDisplay={handleBackToRoomDisplay}\r\n        /> :\r\n        <RoomDisplay \r\n          renderedRooms={renderedRooms}\r\n          username={username}\r\n          createNewRoom={createNewRoom}\r\n        />\r\n      :\r\n      <UserEntry handleUsername={handleUsername}/>\r\n    }\r\n    </div>  \r\n  )\r\n}\r\n\r\nfunction UserEntry({ handleUsername }) {\r\n  const [username, setUsername] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    setUsername(e.target.value)    \r\n  }\r\n  const handleSubmit = () => {\r\n    if (username) {\r\n      handleUsername(username)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"position-absolute top-50 start-50 translate-middle\">\r\n      <div className=\"card text-white bg-dark mb-3\">\r\n        <div className=\"card-header\">Enter a username</div>        \r\n        <div className=\"card-body input-group\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n              <input \r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChatDisplay({ roomId, emitMessage, handleClick, username, handleBackToRoomDisplay, usernameColor }) {   \r\n  return (\r\n    <div className=\"card chat-display\">\r\n      <div className=\"card-body\">\r\n        <ChatHeader \r\n          roomId={roomId} \r\n          handleClick={handleClick}\r\n          handleBackToRoomDisplay={handleBackToRoomDisplay}\r\n        />\r\n        <ChatMessages \r\n          roomId={roomId}\r\n          username={username}\r\n          usernameColor={usernameColor}          \r\n        />\r\n        <ChatInput \r\n          roomId={roomId}\r\n          emitMessage={emitMessage}\r\n          username={username}\r\n          usernameColor={usernameColor}       \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction RoomDisplay({ renderedRooms, username, createNewRoom }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <RoomHeader \r\n          username={username}\r\n        />\r\n        <RoomsList          \r\n          renderedRooms={renderedRooms} \r\n          createNewRoom={createNewRoom} \r\n          username={username}          \r\n        />\r\n        <RoomFooter />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}