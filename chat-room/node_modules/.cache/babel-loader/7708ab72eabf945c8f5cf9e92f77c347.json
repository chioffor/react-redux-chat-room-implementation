{"ast":null,"code":"var _jsxFileName = \"/home/chiks/socketProject/chat-room/src/features/chats/ChatInput.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { newChatMessage } from '../rooms/roomsSlice';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst endpoint = 'http://localhost:3001';\nexport const ChatInput = ({\n  roomId,\n  emitMessage\n}) => {\n  _s();\n\n  // const rooms = useSelector(state => state.rooms.rooms)\n  // const room = rooms.find(room => room.id === roomId) \n  useEffect(() => {\n    socket = io(endpoint);\n  });\n  const dispatch = useDispatch();\n  const [chatMessage, setChatMessage] = useState('');\n\n  const handleChange = e => setChatMessage(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (chatMessage) {\n      // emitMessage(chatMessage)\n      // setChatMessage('');\n      dispatch(newChatMessage({}));\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer input-group mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          type: \"text\",\n          value: chatMessage,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input-button btn btn-outline\",\n          type: \"submit\",\n          value: \"Send\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatInput, \"O/GfTqF7KapDjMGP/sqRYz/E07k=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/home/chiks/socketProject/chat-room/src/features/chats/ChatInput.js"],"names":["nanoid","React","useEffect","useState","useDispatch","newChatMessage","io","socket","endpoint","ChatInput","roomId","emitMessage","dispatch","chatMessage","setChatMessage","handleChange","e","target","value","handleSubmit","preventDefault"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,IAAIC,MAAJ;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAAA;;AAClD;AACA;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,GAAGD,EAAE,CAACE,QAAD,CAAX;AACH,GAFQ,CAAT;AAIA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;;AAEA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAIP,WAAJ,EAAiB;AACb;AACA;AACAD,MAAAA,QAAQ,CAACP,cAAc,CAAC,EAAD,CAAf,CAAR;AAGH;;AAAA;AAEJ,GAXD;;AAaA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEc,YAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,KAAK,EAAEN,WAHX;AAII,UAAA,QAAQ,EAAEE;AAJd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AACI,UAAA,SAAS,EAAC,mCADd;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,KAAK,EAAC,MAHV;AAII,UAAA,OAAO,EAAEI;AAJb;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA9CM;;GAAMV,S;UAOQL,W;;;KAPRK,S","sourcesContent":["import { nanoid } from '@reduxjs/toolkit'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { newChatMessage } from '../rooms/roomsSlice'\n\nimport { io } from 'socket.io-client'\n\nlet socket;\nconst endpoint = 'http://localhost:3001'\n\nexport const ChatInput = ({ roomId, emitMessage }) => {\n    // const rooms = useSelector(state => state.rooms.rooms)\n    // const room = rooms.find(room => room.id === roomId) \n    useEffect(() => {\n        socket = io(endpoint)\n    })\n    \n    const dispatch = useDispatch();\n\n    const [chatMessage, setChatMessage] = useState('');\n\n    const handleChange = (e) => setChatMessage(e.target.value);\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (chatMessage) {            \n            // emitMessage(chatMessage)\n            // setChatMessage('');\n            dispatch(newChatMessage({\n                \n            }))\n        };\n        \n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"card-footer input-group mt-2\">\n                    <input\n                        className='chat-input'\n                        type='text'\n                        value={chatMessage}\n                        onChange={handleChange}\n                    />\n                    <input \n                        className=\"chat-input-button btn btn-outline\"\n                        type=\"submit\"\n                        value=\"Send\"\n                        onClick={handleSubmit}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}