{"ast":null,"code":"var _jsxFileName = \"/home/chiks/socketProject/chat-room/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport { io } from 'socket.io-client';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { RoomHeader } from './features/rooms/RoomHeader';\nimport { RoomsList } from './features/rooms/RoomsList';\nimport { RoomFooter } from './features/rooms/RoomFooter';\nimport { ChatHeader } from './features/chats/ChatHeader';\nimport { ChatMessages } from './features/chats/ChatMessages';\nimport { ChatInput } from './features/chats/ChatInput';\nimport { newChatMessage } from './features/rooms/roomsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst endpoint = 'http://localhost:3001';\n\nconst App = () => {\n  _s();\n\n  const [clicked, setClicked] = useState(false);\n  const [roomId, setRoomId] = useState('');\n  const [username, setUsername] = useState('');\n  const [typingStatus, setTypingStatus] = useState('');\n  const rooms = useSelector(state => state.rooms.rooms);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket = io(endpoint);\n    socket.on('chat message', function (data) {\n      dispatch(newChatMessage({\n        roomId: data.roomId,\n        text: data.text,\n        messageId: nanoid(),\n        username: data.username\n      })); // alert(data.username)\n    });\n    socket.on('typing event', function (data) {\n      setTypingStatus(data.username + 'is typing');\n    });\n  }, [dispatch]);\n\n  const handleClick = (e, roomId) => {\n    setClicked(true);\n    setRoomId(roomId);\n  };\n\n  const handleUsername = username => {\n    setUsername(username);\n  };\n\n  const emitMessage = (text, roomId, username) => {\n    if (text) {\n      socket.emit('chat message', {\n        text,\n        roomId,\n        username\n      });\n    }\n  };\n\n  const emitTypingEvent = (username, roomId) => {\n    socket.emit('typing event', {\n      username,\n      roomId\n    });\n  };\n\n  const renderedRooms = rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group-item\",\n    onClick: e => handleClick(e, room.id),\n    children: room.name\n  }, room.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container w-50 mt-5\",\n    children: username ? clicked ? /*#__PURE__*/_jsxDEV(ChatDisplay, {\n      roomId: roomId,\n      emitMessage: emitMessage,\n      handleClick: handleClick,\n      username: username,\n      emitTypingEvent: emitTypingEvent,\n      typingStatus: typingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RoomDisplay, {\n      renderedRooms: renderedRooms,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserEntry, {\n      handleUsername: handleUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this) // <div className=\"container w-50 mt-5\">\n  //   { clicked ?\n  //     <ChatDisplay \n  //       roomId={roomId}\n  //       emitMessage={emitMessage}\n  //       handleClick={handleClick}\n  //     /> :\n  //     <RoomDisplay renderedRooms={renderedRooms} />\n  //   }\n  // </div>\n  ;\n};\n\n_s(App, \"iCWFLFpdt4cj/2HpanJLlcoj+WU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\n\nfunction UserEntry({\n  handleUsername\n}) {\n  _s2();\n\n  const [username, setUsername] = useState('');\n\n  const handleChange = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (username) {\n      handleUsername(username);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-absolute top-50 start-50 translate-middle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-white bg-dark mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Enter a username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserEntry, \"AfRD6VxGv+Gn/ZNWvgmLk5f6638=\");\n\n_c2 = UserEntry;\n\nfunction ChatDisplay({\n  roomId,\n  emitMessage,\n  handleClick,\n  username,\n  emitTypingEvent,\n  typingStatus\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        roomId: roomId,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        roomId: roomId,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        roomId: roomId,\n        emitMessage: emitMessage,\n        username: username,\n        emitTypingEvent: emitTypingEvent,\n        typingStatus: typingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ChatDisplay;\n;\n\nfunction RoomDisplay({\n  renderedRooms,\n  username\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(RoomHeader, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomsList, {\n      renderedRooms: renderedRooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = RoomDisplay;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"UserEntry\");\n$RefreshReg$(_c3, \"ChatDisplay\");\n$RefreshReg$(_c4, \"RoomDisplay\");","map":{"version":3,"sources":["/home/chiks/socketProject/chat-room/src/App.js"],"names":["React","useEffect","useState","useSelector","useDispatch","io","nanoid","RoomHeader","RoomsList","RoomFooter","ChatHeader","ChatMessages","ChatInput","newChatMessage","socket","endpoint","App","clicked","setClicked","roomId","setRoomId","username","setUsername","typingStatus","setTypingStatus","rooms","state","dispatch","on","data","text","messageId","handleClick","e","handleUsername","emitMessage","emit","emitTypingEvent","renderedRooms","map","room","id","name","UserEntry","handleChange","target","value","handleSubmit","ChatDisplay","RoomDisplay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { io } from 'socket.io-client'\r\n\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n\r\nimport { RoomHeader } from './features/rooms/RoomHeader'\r\nimport { RoomsList } from './features/rooms/RoomsList'\r\nimport { RoomFooter } from './features/rooms/RoomFooter'\r\n\r\nimport { ChatHeader } from './features/chats/ChatHeader'\r\nimport { ChatMessages } from './features/chats/ChatMessages'\r\nimport { ChatInput } from './features/chats/ChatInput'\r\n\r\nimport { newChatMessage } from './features/rooms/roomsSlice'\r\n\r\nlet socket;\r\nconst endpoint = 'http://localhost:3001'\r\n\r\nconst App = () => {\r\n  \r\n  const [clicked, setClicked] = useState(false);\r\n  const [roomId, setRoomId] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [typingStatus, setTypingStatus] = useState('');\r\n\r\n  const rooms = useSelector(state => state.rooms.rooms);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    socket = io(endpoint);\r\n    socket.on('chat message', function(data) {\r\n      dispatch(newChatMessage({\r\n        roomId: data.roomId,\r\n        text: data.text,\r\n        messageId: nanoid(),\r\n        username: data.username\r\n      }));\r\n      // alert(data.username)\r\n    });\r\n    socket.on('typing event', function(data) {\r\n      setTypingStatus(data.username + 'is typing')      \r\n    })\r\n   \r\n  }, [dispatch]);\r\n\r\n  const handleClick = (e, roomId) => {\r\n    setClicked(true)\r\n    setRoomId(roomId)\r\n  }\r\n\r\n  const handleUsername = (username) => {\r\n    setUsername(username)\r\n  }\r\n\r\n  const emitMessage = (text, roomId, username) => {\r\n    if (text) {\r\n      socket.emit('chat message', { text, roomId, username })\r\n    }\r\n  }\r\n\r\n  const emitTypingEvent = (username, roomId) => {\r\n    socket.emit('typing event', { username, roomId })\r\n  }\r\n\r\n  const renderedRooms = rooms.map(room => (\r\n    <div \r\n      className=\"list-group-item\" \r\n      key={room.id}\r\n      onClick={e => handleClick(e, room.id)}\r\n    >\r\n      {room.name}\r\n    </div>\r\n  ));\r\n  \r\n  return (\r\n    <div className=\"container w-50 mt-5\">\r\n    {username ? \r\n      clicked ?\r\n        <ChatDisplay\r\n          roomId={roomId}\r\n          emitMessage={emitMessage}\r\n          handleClick={handleClick}\r\n          username={username}\r\n          emitTypingEvent={emitTypingEvent}\r\n          typingStatus={typingStatus}\r\n        /> :\r\n        <RoomDisplay \r\n          renderedRooms={renderedRooms}\r\n          username={username}\r\n        />\r\n      :\r\n      <UserEntry handleUsername={handleUsername}/>\r\n    }\r\n    </div>   \r\n\r\n    // <div className=\"container w-50 mt-5\">\r\n    //   { clicked ?\r\n    //     <ChatDisplay \r\n    //       roomId={roomId}\r\n    //       emitMessage={emitMessage}\r\n    //       handleClick={handleClick}\r\n    //     /> :\r\n    //     <RoomDisplay renderedRooms={renderedRooms} />\r\n    //   }\r\n    // </div>\r\n  )\r\n}\r\n\r\nfunction UserEntry({ handleUsername }) {\r\n  const [username, setUsername] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    setUsername(e.target.value)    \r\n  }\r\n  const handleSubmit = () => {\r\n    if (username) {\r\n      handleUsername(username)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"position-absolute top-50 start-50 translate-middle\">\r\n      <div className=\"card text-white bg-dark mb-3\">\r\n        <div className=\"card-header\">Enter a username</div>        \r\n        <div className=\"card-body input-group\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n              <input \r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChatDisplay({ roomId, emitMessage, handleClick, username, emitTypingEvent, typingStatus }) {\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <ChatHeader roomId={roomId} handleClick={handleClick} />\r\n        <ChatMessages \r\n          roomId={roomId}\r\n          username={username}\r\n        />\r\n        <ChatInput \r\n          roomId={roomId}\r\n          emitMessage={emitMessage}\r\n          username={username}  \r\n          emitTypingEvent={emitTypingEvent} \r\n          typingStatus={typingStatus}     \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\nfunction RoomDisplay({ renderedRooms, username }) {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <RoomHeader \r\n        username={username}\r\n      />\r\n      <RoomsList renderedRooms={renderedRooms}/>\r\n      <RoomFooter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}