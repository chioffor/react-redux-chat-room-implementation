{"ast":null,"code":"var _jsxFileName = \"/home/chiks/socketProject/chat-room/src/features/chats/ChatInput.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { newChatMessage } from '../rooms/roomsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatInput({\n  roomId\n}) {\n  _s();\n\n  // const rooms = useSelector(state => state.rooms.rooms)\n  // const room = rooms.find(room => room.id === roomId) \n  const dispatch = useDispatch();\n  const [chatMessage, setChatMessage] = useState('');\n\n  const handleChange = e => {\n    setChatMessage(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (chatMessage) {\n      dispatch(newChatMessage({\n        roomId: roomId,\n        messageId: nanoid(),\n        text: chatMessage\n      }));\n      setChatMessage('');\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer input-group mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          type: \"text\",\n          value: chatMessage,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input-button btn btn-outline\",\n          type: \"submit\",\n          value: \"Send\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatInput, \"SJwq2+n5CLyxwhiCo+KiSvnEICw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/home/chiks/socketProject/chat-room/src/features/chats/ChatInput.js"],"names":["nanoid","React","useState","useSelector","useDispatch","newChatMessage","ChatInput","roomId","dispatch","chatMessage","setChatMessage","handleChange","e","target","value","handleSubmit","preventDefault","messageId","text"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAAA;;AAClC;AACA;AAEA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAExBA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAIP,WAAJ,EAAiB;AACbD,MAAAA,QAAQ,CAACH,cAAc,CAAC;AACpBE,QAAAA,MAAM,EAAEA,MADY;AAEpBU,QAAAA,SAAS,EAAEjB,MAAM,EAFG;AAGpBkB,QAAAA,IAAI,EAAET;AAHc,OAAD,CAAf,CAAR;AAMAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;;AAAA;AAEJ,GAdD;;AAgBA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEK,YAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,KAAK,EAAEN,WAHX;AAII,UAAA,QAAQ,EAAEE;AAJd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AACI,UAAA,SAAS,EAAC,mCADd;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,KAAK,EAAC,MAHV;AAII,UAAA,OAAO,EAAEI;AAJb;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAhDeT,S;UAIKF,W;;;KAJLE,S","sourcesContent":["import { nanoid } from '@reduxjs/toolkit';\nimport React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { newChatMessage } from '../rooms/roomsSlice'\n\nexport function ChatInput({ roomId }) {\n    // const rooms = useSelector(state => state.rooms.rooms)\n    // const room = rooms.find(room => room.id === roomId) \n    \n    const dispatch = useDispatch();\n\n    const [chatMessage, setChatMessage] = useState('')\n\n    const handleChange = (e) => {\n        setChatMessage(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if (chatMessage) {\n            dispatch(newChatMessage({\n                roomId: roomId,\n                messageId: nanoid(),\n                text: chatMessage\n            }));\n\n            setChatMessage('')\n        };\n        \n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"card-footer input-group mt-2\">\n                    <input\n                        className='chat-input'\n                        type='text'\n                        value={chatMessage}\n                        onChange={handleChange}\n                    />\n                    <input \n                        className=\"chat-input-button btn btn-outline\"\n                        type=\"submit\"\n                        value=\"Send\"\n                        onClick={handleSubmit}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}